Passos:
    ✔ Criar uma rota get para '/pizzas/:id' direcionando a req para o controller PizzasController.show @done(22-08-25 12:11)

    ✔ Criar uma rota get para '/pizzas/busca' direcionando a req para o controller PizzasController.search @done(22-08-25 12:11)

    ✘ Criar uma rota get para '/usuarios/:id direcionando a req para o controller UsuariosController.show @cancelled(22-08-25 10:53)
    
    ✔ Criar o controller show e search dentro de PizzasController. @done(22-08-25 12:11)
    
    ✔ A função show deve: @done(22-08-25 12:10)
        - Levantar o id que veio no parâmetro de rota (req.params.id)
        - Encontrar no array de pizzas a pizza que tem o id desejado (pizzas.find)
        - Retornar a view pizza.ejs, a pizza encontrada no passo anterior para essa view

    ☐ A função search deve:
        - Levantar o trecho que está sendo buscado (req.query.q)
        - Filtrar as pizzas para obter somente as pizzas com esse trecho
        - retornar a view index.ejs, passando para ela somente as pizzas filtradas
        
        Fase de Cadastro:
            ☐ Criar a rota post /usuarios/add
            ☐ Fazer com que a rota encaminhe a req para UsuariosController.add
            ☐ Criar a função UsuariosController.add...
            Fazer com que a função add:
                - Crie um usuário dentro de um arquivo usuarios.json
                - Cria a req.session.usuario
                - Direciona o usuario para o endereço /pizzas ou /pizzas/cart
        Fase do Login:
            ☐ Criar a rota post para /usuarios/login
            ☐ Fazer com que a rota encaminhe a req para UsuariosController.login
            Fazer com que a função login:
                - Verificar se usuário e senha conferem
                - Caso não esteja ok, voltar para tela de login com erro
                - Caso esteja ok,
                    + criar a session req.session.usuario
                    + direcionar o usuário para o endereço /pizzas ou /pizzas/cart